{
  "js": "var offlineLink = \"https://raw.githubusercontent.com/gavingogaming/eagworldshare/refs/heads/main/index.html\";\r\n// Select necessary DOM elements\r\nvar typeUsername = document.querySelector('#username');\r\nvar submitUsername = document.querySelector('#submit-username');\r\n\r\n// Functions to update the UI with shared worlds\r\nfunction updateCurrentShared(worlds) {\r\n    const currentShared = document.querySelector('.current-shared');\r\n    document.querySelectorAll('.slot').forEach(x=>x.remove());\r\n\r\n    worlds.forEach((world) => {\r\n        const slot = document.createElement('div');\r\n        slot.classList.add('slot');\r\n\r\n        const title = document.createElement('span');\r\n        title.textContent = world.title;\r\n        title.classList.add('title');\r\n        slot.appendChild(title);\r\n\r\n        const image = document.createElement('div');\r\n        image.classList.add('image');\r\n\r\n        const code = document.createElement('span');\r\n        code.textContent = world.code;\r\n        code.classList.add('code');\r\n        image.appendChild(code);\r\n\r\n        const user = document.createElement('span');\r\n        user.textContent = `${world.player}`;\r\n        user.classList.add('from');\r\n\r\n        const icons = document.createElement('div');\r\n        icons.classList.add('icons');\r\n\r\n        const copy = document.createElement('button');\r\n\r\n        const icon = document.createElement('i');\r\n        icon.className = \"fa-solid fa-clone\";\r\n        copy.addEventListener('click', e => {\r\n            navigator.clipboard.writeText(world.code);\r\n        })\r\n        copy.appendChild(icon);\r\n        icons.appendChild(copy);\r\n\r\n        const json = document.createElement('button');\r\n        const codeicon = document.createElement('i');\r\n        codeicon.className = \"fa-solid fa-file-code\";\r\n        json.addEventListener('click', e => {\r\n            prompt(\"JSON Data\", JSON.stringify(world));\r\n        })\r\n        json.appendChild(codeicon);\r\n        icons.appendChild(json);\r\n\r\n        slot.appendChild(image);\r\n        slot.appendChild(user);\r\n        slot.appendChild(icons);\r\n        currentShared.appendChild(slot);\r\n    });\r\n}\r\n\r\n// Function to post data to the slots endpoint\r\nasync function post(data, slot) {\r\n    try {\r\n        const response = await fetch(`https://klipsapi.fly.dev/slots`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ ...data, slot })\r\n        });\r\n\r\n        if (response.ok) {\r\n            console.log(`Slot ${slot} updated successfully`);\r\n            document.querySelector('.submit-post').classList.add('hidden');\r\n            document.querySelector('.current-shared').classList.remove('hidden');\r\n            document.querySelector('#show-submit').classList.remove('hidden');\r\n            fetchShared();\r\n        } else {\r\n            console.error(`Failed to update slot ${slot}`);\r\n        }\r\n    } catch (error) {\r\n        console.error('Error posting data:', error);\r\n    }\r\n}\r\n\r\n// Fetch and load shared worlds\r\nasync function fetchShared() {\r\n    const worlds = [];\r\n    for (let slot = 1; slot <= 3; slot++) {\r\n        try {\r\n            const response = await fetch(`https://klipsapi.fly.dev/slots/${slot}`);\r\n            if (response.ok) {\r\n                const world = await response.json();\r\n                worlds.push(world);\r\n            } else {\r\n                console.log(`Slot ${slot} is empty`);\r\n            }\r\n        } catch (error) {\r\n            console.error(`Error fetching slot ${slot}:`, error);\r\n        }\r\n    }\r\n    updateCurrentShared(worlds);\r\n}\r\n\r\n// Load username from localStorage\r\nwindow.username = window.localStorage.ewsUsername || '';\r\nif (window.localStorage.ewsUsername && window.localStorage.ewsUsername.trim() != '') {\r\n    typeUsername.value = window.username;\r\n}\r\n\r\nconst regex = [\r\n    \"n+[i1]+[gq|GQ]+[e|a3]*r+[s\\$]*\",\r\n    '^[a@][s$][s$]$',\r\n    '[a@][s$][s$]h[o0][l1][e3][s$]?', 'b[a@][s$][t+][a@]rd ', 'b[e3][a@][s$][t+][i1][a@]?[l1]([i1][t+]y)?', 'b[e3][a@][s$][t+][i1][l1][i1][t+]y', 'b[e3][s$][t+][i1][a@][l1]([i1][t+]y)?', 'b[i1][t+]ch[s$]?', 'b[i1][t+]ch[e3]r[s$]?', 'b[i1][t+]ch[e3][s$]', 'b[i1][t+]ch[i1]ng?', 'b[l1][o0]wj[o0]b[s$]?', 'c[l1][i1][t+]', '^(c|k|ck|q)[o0](c|k|ck|q)[s$]?$', '(c|k|ck|q)[o0](c|k|ck|q)[s$]u', '(c|k|ck|q)[o0](c|k|ck|q)[s$]u(c|k|ck|q)[e3]d ', '(c|k|ck|q)[o0](c|k|ck|q)[s$]u(c|k|ck|q)[e3]r', '(c|k|ck|q)[o0](c|k|ck|q)[s$]u(c|k|ck|q)[i1]ng', '(c|k|ck|q)[o0](c|k|ck|q)[s$]u(c|k|ck|q)[s$]', '^cum[s$]?$', 'cumm??[e3]r', 'cumm?[i1]ngcock', '(c|k|ck|q)um[s$]h[o0][t+]', '(c|k|ck|q)un[i1][l1][i1]ngu[s$]', '(c|k|ck|q)un[i1][l1][l1][i1]ngu[s$]', '(c|k|ck|q)unn[i1][l1][i1]ngu[s$]', '(c|k|ck|q)un[t+][s$]?', '(c|k|ck|q)un[t+][l1][i1](c|k|ck|q)', '(c|k|ck|q)un[t+][l1][i1](c|k|ck|q)[e3]r', '(c|k|ck|q)un[t+][l1][i1](c|k|ck|q)[i1]ng', 'cyb[e3]r(ph|f)u(c|k|ck|q)', 'd[a@]mn', 'd[i1]ck', 'd[i1][l1]d[o0]', 'd[i1][l1]d[o0][s$]', 'd[i1]n(c|k|ck|q)', 'd[i1]n(c|k|ck|q)[s$]', '[e3]j[a@]cu[l1]', '(ph|f)[a@]g[s$]?', '(ph|f)[a@]gg[i1]ng', '(ph|f)[a@]gg?[o0][t+][s$]?', '(ph|f)[a@]gg[s$]', '(ph|f)[e3][l1][l1]?[a@][t+][i1][o0]', '(ph|f)u(c|k|ck|q)', '(ph|f)u(c|k|ck|q)[s$]?', 'g[a@]ngb[a@]ng[s$]?', 'g[a@]ngb[a@]ng[e3]d', 'g[a@]y', 'h[o0]m?m[o0]', 'h[o0]rny', 'j[a@](c|k|ck|q)-?[o0](ph|f)(ph|f)?', 'j[e3]rk-?[o0](ph|f)(ph|f)?', 'j[i1][s$z][s$z]?m?', '[ck][o0]ndum[s$]?', 'mast(e|ur)b(8|ait|ate)', 'n+[i1]+[gq]+[e3]*r+[s$]*', '[o0]rg[a@][s$][i1]m[s$]?', '[o0]rg[a@][s$]m[s$]?', 'p[e3]nn?[i1][s$]', 'p[i1][s$][s$]', 'p[i1][s$][s$][o0](ph|f)(ph|f) ', 'p[o0]rn', 'p[o0]rn[o0][s$]?', 'p[o0]rn[o0]gr[a@]phy', 'pr[i1]ck[s$]?', 'pu[s$][s$][i1][e3][s$]', 'pu[s$][s$]y[s$]?', '[s$][e3]x', '[s$]h[i1][t+][s$]?', '[s$][l1]u[t+][s$]?', '[s$]mu[t+][s$]?', '[s$]punk[s$]?', '[t+]w[a@][t+][s$]?'\r\n]\r\nconst badwords = [\r\n    \"fuck\",\r\n    \"f@ck\",\r\n    \"f4ck\",\r\n    \"fuk\",\r\n    \"sh1t\",\r\n    \"shit\",\r\n    \"bitch\",\r\n    \"b1tch\",\r\n    \"b!tch\",\r\n    \"asshole\",\r\n    \"a$$hole\",\r\n    \"a55hole\",\r\n    \"dick\",\r\n    \"d1ck\",\r\n    \"d!ck\",\r\n    \"pussy\",\r\n    \"pu55y\",\r\n    \"p@ssy\",\r\n    \"nigger\",\r\n    \"n1gger\",\r\n    \"n!gger\",\r\n    \"ni9a\",\r\n    \"niga\",\r\n    \"n1ga\",\r\n    \"n!ga\",\r\n    \"ni99a\",\r\n    \"nigga\",\r\n    \"n1gga\",\r\n    \"n!gga\",\r\n    \"ni99er\",\r\n    \"faggot\",\r\n    \"f@ggot\",\r\n    \"f4ggot\",\r\n    \"cunt\",\r\n    \"c*nt\",\r\n    \"c@nt\",\r\n    \"whore\",\r\n    \"wh0re\",\r\n    \"w#ore\",\r\n    \"slut\",\r\n    \"5lut\",\r\n    \"s1ut\"\r\n];\r\nfunction filter(input) {\r\n    return new Promise((resolve, reject) => {\r\n        var x = false;\r\n        regex.forEach(rgx => {\r\n            var r = new RegExp(rgx);\r\n            if(r.test(input)) {\r\n                resolve(true);\r\n                x = true;\r\n            }\r\n        })\r\n        const normalized = input.toLowerCase()\r\n            .replace(/@/g, \"a\")\r\n            .replace(/4/g, \"a\")\r\n            .replace(/0/g, \"o\")\r\n            .replace(/1/g, \"i\")\r\n            .replace(/5/g, \"s\")\r\n            .replace(/\\$/g, \"s\")\r\n            .replace(/#/g, \"\");\r\n        if (!x) resolve(badwords.some(word => normalized.includes(word)));\r\n    });\r\n}\r\n\r\n// Submit username and show submit-post section\r\nsubmitUsername.addEventListener('click', (e) => {\r\n    filter(typeUsername.value).then(x => {\r\n        if(x) return alert(\"Please change your ingame name to share! You may type a non-existant name ONLY to view worlds.\"); \r\n        window.localStorage.ewsUsername = typeUsername.value;\r\n        window.username = typeUsername.value;\r\n        document.querySelector('.current-shared').classList.remove('hidden');\r\n        document.querySelector('.user-sel').classList.add('hidden');\r\n        document.querySelector('#show-submit').classList.remove('hidden');\r\n    })\r\n});\r\n\r\n// Submit to slots\r\n['o','t','th'].map((element, index) => {\r\n    document.querySelector('.submit-'+element).addEventListener('click', () => {\r\n        const title = document.querySelector('#submission-title').value;\r\n        const code = document.querySelector('#submission-code').value;\r\n        const player = window.username;\r\n        if (title && code && player) {\r\n            post({ title, code, player }, index+1);\r\n        }\r\n    });\r\n})\r\n\r\ndocument.querySelector('#show-submit').addEventListener('click', e => {\r\n    document.querySelector('#show-submit').classList.add('hidden');\r\n    document.querySelector('.current-shared').classList.add('hidden');\r\n    document.querySelector('.submit-post').classList.remove('hidden');\r\n});\r\ndocument.querySelector('#refresh-list').addEventListener('click', e => {\r\n    fetchShared();\r\n\r\n    setTimeout(()=>{fetchShared()},1000);\r\n});\r\ndocument.querySelector('#offline-dl').addEventListener('click', e => {\r\n    fetch(offlineLink).then(x => x.text()).then(page => {\r\n        var url = URL.createObjectURL(new Blob([page], {type: 'text/html'}));\r\n        var link = document.createElement('a');\r\n        link.href = url;\r\n        link.download = 'eagworldshare.html';\r\n        link.click();\r\n        URL.revokeObjectURL(url);\r\n    });\r\n});\r\n\r\n// Fetch and display shared worlds on page load\r\nfetchShared();",
  "css": "/* CSS */\nhtml, body {\n    background: #111;\n    color: white;\n    font-family: Inter;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    gap: 5px;\n}\nh1 {\n    display: flex;\n    align-items: center;\n    margin: 2px 0;\n}\n.font-legacy {\n    font-family: KlashLegacyClassic;\n}\n.space1 {\n    width: 2px;\n    height: 1px;\n    display: inline-flex;\n}\na:link, a:visited {\n    color: lightskyblue;\n    font-weight: 700;\n}\n.blue {\n    color: rgb(182, 255, 210) !important;\n}\n.space5 {\n    width: 5px;\n}\n.mc-input {\n    font-family: KlashLegacy;\n    color: white;\n    height: 30px;\n    width: 200px;\n    border: 2px solid #A0A0A0;\n    background: black;\n    font-size: 20px;\n    padding: 0 5px;\n    caret-color: #a0a0a0;\n}\n.mc-label {\n    width: 210px;\n    font-family: KlashLegacy;\n    color: #acacac;\n}\n.mc-input:focus-visible {\n    outline: 0;\n}\n.gap {\n    width: 1px;\n    height: 20px;\n}\n.w-253 {\n    width: 253px;\n    display: flex;\n    gap: 5px;\n    justify-content: space-between;\n}\n.mc-btn-square {\n    background: #ffffff40;\n    border: 2px solid;\n    border-top-color: #a0a0a0;\n    border-left-color: #a0a0a0;\n    border-bottom-color: #a0a0a050;\n    border-right-color: #a0a0a050;\n    width: 33px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.mc-btn {\n    background: #ffffff40;\n    border: 2px solid;\n    border-top-color: #a0a0a0;\n    border-left-color: #a0a0a0;\n    border-bottom-color: #a0a0a050;\n    border-right-color: #a0a0a050;\n    display: flex;\n    align-items: center;\n    width: 215px;\n    height: 30px;\n    color: white;\n    font-family: KlashLegacy;\n    justify-content: center;\n}\n.mc-btn-square i, .mc-btn i {\n    font-size: 18px;\n    color: #dcffdc;\n    transition: all 0.2s;\n}\n.mc-btn-square:active, .mc-btn:active {\n    border-top-color: #bdbdbd;\n    border-left-color: #bdbdbd;\n    border-bottom-color: #bdbdbd70;\n    border-right-color: #bdbdbd70;\n    background: #ffffff50;\n}\n.mc-btn-square:hover i, .mc-btn:hover i {\n    color: #ccffcc;\n    scale: 1.1;\n}\n\n.orange {\n    color: rgb(255, 158, 68) !important;\n}\n.purple {\n    color: #E77FF8 !important;\n}\n.green {\n    color: #7ff8a7 !important;\n}\n.clicky {\n    text-decoration: underline;\n    cursor: pointer;\n}\n.footer {\n    position: absolute;\n    bottom: 0;\n    width: 100%;\n    height: 40px;\n    background: #000c;\n    border-top: 2px solid #a0a0a040;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-family: KlashLegacy;\n}\n.v-bar {\n    height: 60%;\n    width: 2px;\n    background: #a0a0a040;\n    margin: 0 10px;\n}\n.current-shared {\n    display: flex;\n    gap: 10px;\n    width: 80vw;\n}\n.slot {\n    flex: 1;\n    height: 200px;\n    background: #1c1c1c;\n    padding: 10px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    border-radius: 6px;\n    gap: 5px;\n}\n.warning {\n    color: rgb(255, 136, 136);\n}\n.image {\n    width: 50%;\n    aspect-ratio: 1;\n    background: url(\"https://packpng.com/static/pack.png\");\n    max-width: 123px;\n    background-size: cover;\n    border-radius: 6px;\n    background-position: 50%;\n    display: flex;\n    align-items: center;\n    filter: grayscale(0.9);\n    justify-content: center;\n    transition: all 0.2s;\n    text-shadow: 2px 2px 0px black;\n}\n.slot:hover > .image {\n    filter: grayscale(0);\n}\n.code {\n    font-family: 'JetBrains Mono';\n    transition: all 0.2s;\n    font-weight: 500;\n}\n.slot:hover > .image > .code {\n    font-size: 20px;\n}\n.icons {\n    gap: 2px;\n    display: flex;\n}\n.icons button {\n    color: white;\n    background: #333;\n    border: 2px solid #a0a0a070;\n    padding: 3px 12px;\n    cursor: pointer;\n}\n.icons button i {\n    transition: scale 0.2s;\n}\n.icons button:hover i {\n    scale: 1.1;\n}\n.small {\n    font-size: 20px;\n    margin-left: 5px;\n    letter-spacing: 1px;\n}\n@media only screen and (max-width: 600px) {\n    h1 {\n        font-size: 20px;\n        margin-top: 50px;\n    }\n    .small {\n        font-size: 14px;\n    }\n    .current-shared {\n        width: calc(90vw - 20px);\n        flex-direction: column;\n    }\n    .footer {\n        top: 0;\n        border-bottom: 2px solid #a0a0a040;\n    }\n    .filler {\n        display: none;\n    }\n}\n\n\n.hidden {\n    display: none;\n}",
  "html": "<h1 class=\"font-legacy\">E<span class=\"space1\"></span>AG WORLD SH<span class=\"space1\"></span>ARE <span class=\"small\">r2</span></h1>\n\n<div class=\"user-sel\">\n    <div class=\"mc-label w-253\">username</div>\n    <div class=\"w-253\">\n        <input type=\"text\" maxlength=\"32\" id=\"username\" class=\"mc-input\" spellcheck=\"false\">\n        <button class=\"mc-btn-square\" id=\"submit-username\"><i class=\"fa-solid fa-circle-check\"></i></button>\n    </div>\n</div>\n<div class=\"current-shared hidden\">\n</div>\n<button class=\"mc-btn hidden\" id=\"show-submit\">SUBMIT YOUR OWN</button>\n<button class=\"mc-btn\" id=\"refresh-list\">REFRESH LIST</button>\n<div class=\"submit-post hidden\">\n    <b>Submit YOUR world</b>\n    <div class=\"mc-label\">world name</div>\n    <input type=\"text\" maxlength=\"20\" id=\"submission-title\" class=\"mc-input\" spellcheck=\"false\">\n    <div class=\"gap\"></div>\n    <div class=\"mc-label\">shared world code</div>\n    <input type=\"text\" maxlength=\"5\" id=\"submission-code\" class=\"mc-input\" spellcheck=\"false\">\n    <div class=\"gap\"></div>\n    <button class=\"mc-btn submit-o\">TO SLOT 1</button>\n    <button class=\"mc-btn submit-t\">TO SLOT 2</button>\n    <button class=\"mc-btn submit-th\">TO SLOT 3</button>\n</div>\n\n<div class=\"gap\"></div>\n<span class=\"warning\"><i class=\"fa-solid fa-warning\"></i> Not curated - join at your own risk <i class=\"fa-solid fa-warning\"></i></span>\n<span class=\"warning blue\">Mention client name if modded</span>\n<div class=\"footer\">\n    <span class=\"filler\">BY</span> <span class=\"space5\"></span> <a href=\"//klash.dev\" target=\"_blank\" class=\"orange\">KLASH</a><span class=\"filler\">.dev</span>\n    <div class=\"v-bar\"></div>\n    <span class=\"filler\">OUR</span> <span class=\"space5\"></span> <a href=\"//legacy.klash.dev\" target=\"_blank\">FONT</a>\n    <div class=\"v-bar\"></div>\n    <span class=\"filler\">EWS</span> <span class=\"space5\"></span> <a onclick=\"alert('contact gavingogaming on discord for custom frontend usage')\" class=\"purple clicky\">API</a>\n    <div class=\"v-bar\"></div>\n    <span class=\"filler\">GET</span> <span class=\"space5\"></span> <a class=\"clicky green\" id=\"offline-dl\">OFFLINE</a>\n</div>",
  "settings": {
    "cssImports": [
      "https://rsms.me/inter/inter.css",
      "https://fonts.googleapis.com/css2?family=JetBrains+Mono:wght@500&display=swap",
      "https://legacy.klash.dev/legacy.css",
      "https://site-assets.fontawesome.com/releases/v6.6.0/css/all.css"
    ],
    "jsImports": [],
    "color": "#6955c6",
    "borderWidth": 1,
    "title": "Quadpad Export",
    "shareCodeWithBrainbase": true
  }
}